{"version":3,"sources":["assets/powered.dark.svg","assets/logo.svg","App.js","theme.js","index.js"],"names":["NFTPageWrapper","id","code","useParams","NFT","NFTClaimWrapper","navigate","useNavigate","dispatch","useAnvilDispatch","useEffect","async","url","nft_enter_code","go","PageMk","filterTags","setFilterTags","useState","Marketplace","author","items","goPageBack","goPageNext","stats","fOrder","fQuality","fTags","slice","tagsLeft","spacing","p","alignItems","minW","maxW","pt","map","tag","pl","icon","size","ml","onClick","filter","x","length","onChange","e","target","value","tagidx","floor","mean","Inventory","tokenToText","custom","meta","style","paddingTop","width","name","onOpenNft","PageInventory","address","useAnvilSelector","state","user","Footer","className","to","href","src","powered","display","margin","marginTop","PageTabs","justify","isActive","variant","colorScheme","App","m","logo","w","Wallet","path","element","theme","extendTheme","textStyles","colors","brand","config","initialColorMode","useSystemColorMode","styles","global","props","body","fontFamily","color","mode","lineHeight","bg","backgroundAttachment","html","scrollbarWidth","scrollbarColor","background","backgroundColor","borderRadius","border","borderColor","wordWrap","authentication","setOptions","cookie","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb547ca0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/powered.dark.7ac5058f.svg\";","export default __webpack_public_path__ + \"static/media/logo.4884f336.svg\";","import React, { useEffect, useState } from \"react\";\nimport { tokenToText } from \"@vvv-interactive/nftanvil-tools/cjs/token.js\";\n\nimport {\n  useAnvilDispatch,\n  useAnvilSelector,\n} from \"@vvv-interactive/nftanvil-react\";\nimport { nft_enter_code } from \"@vvv-interactive/nftanvil-react/cjs/reducers/nft\";\nimport { Wallet } from \"@vvv-interactive/nftanvil-react/cjs/components/Wallet\";\nimport {\n  IconButton,\n  Flex,\n  Spacer,\n  Select,\n  Text,\n  Box,\n  Button,\n  Stack,\n  HStack,\n  Wrap,\n} from \"@chakra-ui/react\";\n\nimport {\n  Inventory,\n  InventoryLarge,\n} from \"@vvv-interactive/nftanvil-react/cjs/components/Inventory\";\n\nimport {\n  MarketplaceLoad,\n  MarketplaceFilters,\n} from \"@vvv-interactive/nftanvil-react/cjs/components/Marketplace\";\nimport { NFTPage } from \"@vvv-interactive/nftanvil-react/cjs/components/NFT\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport {\n  NavLink,\n  Routes,\n  Route,\n  useNavigate,\n  useParams,\n} from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport powered from \"./assets/powered.dark.svg\";\n\nimport logo from \"./assets/logo.svg\";\nimport { CloseIcon } from \"@chakra-ui/icons\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Flex m=\"5\">\n        <Box>\n          <img src={logo} className=\"logo\" />\n        </Box>\n        <Spacer />\n        <PageTabs />\n        <Box w=\"3\" />\n        <Wallet />\n      </Flex>\n      <div className=\"inner-page\">\n        <Routes>\n          <Route path=\"/\" element={<PageMk />} />\n\n          <Route path=\"/nfta:id/:code\" element={<NFTPageWrapper />} />\n          <Route path=\"/nfta:id\" element={<NFTPageWrapper />} />\n          <Route path=\"/inventory\" element={<PageInventory />} />\n          <Route path=\"/marketplace\" element={<PageMk />} />\n\n          <Route path=\"/:code\" element={<NFTClaimWrapper />} />\n        </Routes>\n\n        <ToastContainer theme=\"dark\" />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nfunction NFTPageWrapper() {\n  let { id, code } = useParams();\n  return <NFTPage id={\"nfta\" + id} code={code} />;\n}\n\nfunction NFTClaimWrapper() {\n  let { code } = useParams();\n\n  let navigate = useNavigate();\n  const dispatch = useAnvilDispatch();\n  const go = async () => {\n    const url = await dispatch(nft_enter_code(code));\n    navigate(url);\n  };\n  useEffect(() => {\n    go();\n  }, [code, dispatch]);\n\n  return null;\n}\n\nfunction PageMk() {\n  let navigate = useNavigate();\n  const [filterTags, setFilterTags] = useState([]);\n\n  return (\n    <>\n      <MarketplaceLoad\n        author={\n          \"a00aa2d5f5f9738e300615f21104cd06bbeb86bb8daee215525ac2ffde621bed\" //, // \"a004f41ea1a46f5b7e9e9639fbed84e037d9ce66b75d392d2c1640bb7a559cda\" // \"bbd87200973033cb69bc0aee03e90df1a1de01e28aa0246bb175baabfd071754\"\n        }\n      >\n        {(items) => (\n          <MarketplaceFilters\n            items={items}\n            filterTags={filterTags}\n            // attributes={[\n            //   [\"attack\", \"with attack\"],\n            //   [\"airdrops\", \"width airdrops\"],\n            // ]}\n          >\n            {({\n              goPageBack,\n              goPageNext,\n              stats,\n              fOrder,\n              fQuality,\n              fTags,\n              slice,\n              tagsLeft,\n            }) => {\n              return (\n                <HStack spacing={10} p={3} alignItems=\"start\">\n                  <Stack minW={\"300px\"} maxW={\"600px\"} pt=\"90px\">\n                    {fOrder}\n                    {/* {fTags} */}\n\n                    {filterTags.map((tag) => (\n                      <Flex key={tag}>\n                        <Text pl=\"4\">{tag}</Text>\n                        <Spacer />\n                        <IconButton\n                          icon={<CloseIcon />}\n                          size=\"xs\"\n                          ml=\"2\"\n                          onClick={() => {\n                            setFilterTags([\n                              ...filterTags.filter((x) => x !== tag),\n                            ]);\n                          }}\n                        />\n                      </Flex>\n                    ))}\n                    {tagsLeft.length ? (\n                      <Select\n                        onChange={(e) => {\n                          if (e.target.value === \"-\") return;\n                          setFilterTags([...filterTags, e.target.value]);\n                          e.target.value = null;\n                        }}\n                      >\n                        <option value=\"-\">select</option>\n                        {tagsLeft.map((tag, tagidx) => (\n                          <option key={tagidx} value={tag}>\n                            {tag}\n                          </option>\n                        ))}\n                      </Select>\n                    ) : null}\n                    <Text pl=\"4\">\n                      {stats ? <div>Floor: {stats.floor}</div> : null}\n                      {stats ? <div>Mean: {stats.mean}</div> : null}\n                    </Text>\n                  </Stack>\n\n                  <Box>\n                    <Flex>\n                      <Spacer />\n                      <HStack>\n                        {goPageBack}\n                        {goPageNext}\n                      </HStack>\n                    </Flex>\n\n                    <InventoryLarge\n                      items={slice.map((x) => tokenToText(x[0]))}\n                      custom={(meta) => {\n                        return (\n                          <div style={{ paddingTop: \"8px\", width: \"80%\" }}>\n                            {meta.name}\n                          </div>\n                        );\n                      }}\n                      onOpenNft={(id) => {\n                        navigate(\"/\" + id); //, { replace: true }\n                      }}\n                    />\n                    <Flex>\n                      <Spacer />\n                      <HStack>\n                        {goPageBack}\n                        {goPageNext}\n                      </HStack>\n                    </Flex>\n                  </Box>\n                </HStack>\n              );\n            }}\n          </MarketplaceFilters>\n        )}\n      </MarketplaceLoad>\n    </>\n  );\n}\n\nfunction PageInventory() {\n  let navigate = useNavigate();\n\n  const address = useAnvilSelector((state) => state.user.address);\n\n  return (\n    <>\n      <Inventory\n        address={address}\n        onOpenNft={(id) => {\n          navigate(\"/\" + id); //, { replace: true }\n        }}\n      />\n    </>\n  );\n}\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <NavLink to=\"/terms\">Terms &amp; Conditions</NavLink>\n      <a target=\"_blank\" href=\"https://docs.nftanvil.com\">\n        <img\n          src={powered}\n          style={{\n            display: \"block\",\n            margin: \"auto\",\n            width: \"200px\",\n            marginTop: \"30px\",\n          }}\n        />\n      </a>\n    </div>\n  );\n}\n\nfunction PageTabs(p) {\n  const address = useAnvilSelector((state) => state.user.address);\n\n  return (\n    <Box {...p}>\n      <Wrap spacing=\"3\" justify=\"center\">\n        <NavLink to=\"/marketplace\">\n          {({ isActive }) => (\n            <Button isActive={isActive} variant=\"solid\" colorScheme=\"blue\">\n              Marketplace\n            </Button>\n          )}\n        </NavLink>\n        {address ? (\n          <NavLink to=\"/inventory\">\n            {({ isActive }) => (\n              <Button isActive={isActive} variant=\"solid\" colorScheme=\"blue\">\n                Inventory\n              </Button>\n            )}\n          </NavLink>\n        ) : null}\n      </Wrap>\n    </Box>\n  );\n}\n\nexport default App;\n","import { extendTheme } from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nexport const theme = extendTheme({\n  textStyles: {},\n  colors: {\n    brand: {\n      100: \"#eeeeee\",\n    },\n  },\n\n  config: {\n    initialColorMode: \"dark\",\n    useSystemColorMode: false,\n  },\n  styles: {\n    global: (props) => {\n      return {\n        body: {\n          fontFamily: \"body\",\n          color: mode(\"gray.800\", \"whiteAlpha.900\")(props),\n          // bg: mode(\"gray.400\", \"gray.800\")(props),\n          lineHeight: \"base\",\n          // bg: \"linear-gradient(153deg,rgba(27, 32, 43, 1) 0%,rgba(40, 23, 32, 1) 100%)\",\n          bg: \"linear-gradient(153deg, #010a13 0%, #0d2540 100%)\",\n          backgroundAttachment: \"fixed\",\n        },\n        html: {},\n        \"*::placeholder\": {\n          color: mode(\"gray.400\", \"whiteAlpha.400\")(props),\n          scrollbarWidth: \"thin\",\n          scrollbarColor: \" #564d56 #363636\",\n        },\n\n        \"html::-webkit-scrollbar\": {\n          width: \"16px\",\n        },\n\n        \"html::-webkit-scrollbar-track\": {\n          background: \"#363636\",\n        },\n\n        \"html::-webkit-scrollbar-thumb\": {\n          backgroundColor: \"#564d56\",\n          borderRadius: \"9px\",\n          border: \"4px solid #363636\",\n        },\n        \"html::before, html::after\": {\n          borderColor: mode(\"gray.200\", \"whiteAlpha.300\")(props),\n          wordWrap: \"break-word\",\n        },\n      };\n    },\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n//import reportWebVitals from \"./reportWebVitals\";\nimport { AnvilProvider } from \"@vvv-interactive/nftanvil-react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { ColorModeScript } from \"@chakra-ui/react\";\n\nimport { theme } from \"./theme.js\";\n\nimport authentication from \"@vvv-interactive/nftanvil-react/cjs/auth.js\";\nauthentication.setOptions({ cookie: true });\n\nReactDOM.render(\n  <>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n    <React.StrictMode>\n      <AnvilProvider>\n        <ChakraProvider theme={theme}>\n          <BrowserRouter>\n            <App />\n          </BrowserRouter>\n        </ChakraProvider>\n      </AnvilProvider>\n    </React.StrictMode>\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}